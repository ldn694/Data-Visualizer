//Search
if (head == NULL) return NOT_FOUND;
Vertex* cur = head; int i = 0; 
while (cur != NULL) {
    if (cur->value == v) return i;
    cur = cur->next;
    i++;
}
return NOT_FOUND;

//Insert front
Vertex* vtx = new Vertex(v);
if (head == NULL) {
    head = tail = vtx;
    return;
}
vtx->next = head;
head = vtx;

//Insert back
Vertex* vtx = new Vertex(v);
if (head == NULL) {
    head = tail = vtx;
    return;
}
tail->next = vtx;
tail = vtx;

//Insert middle
Vertex* vtx = new Vertex(v);
Vertex* cur = head; int k = 0;
while (cur != NULL) {
    if (k == i - 1) {
        Vertex* aft = cur->next;
        cur->next = vtx;
        vtx->next = aft;
        return;
    }
    cur = cur->next;
    k++;
}

//Remove front
if (head == NULL) return;
Vertex* temp = head;
head = head->next;
if (head == NULL) tail = NULL;
delete temp;

//Remove back
if (head == NULL) return;
Vertex* cur = head, aft = cur->next;
if (aft == NULL) {
    head = tail = NULL;
    delete(cur);
    return;
}
while (aft->next != NULL) {
    cur = cur->next; aft = aft->next;
}
cur->next = NULL;
delete aft; tail = cur;

//Remove i
Vertex* cur = head; int k = 0;
while (cur != NULL) {
    if (k == i - 1) {
        Vertex* aft = cur->next;
        cur->next = aft->next;
        delete aft;
        return;
    }	
    k++; cur = cur->next;
}

//Update front
if (head == NULL) return;
head->value = v;

//Update back
if (tail == NULL) return;
tail->value = v;

//Update middle
Vertex *cur = head; int k = 0;
while (cur != NULL) {
    if (k == i) {
        cur->value = v;
        return;
    }
    k++; cur = cur->next;
}